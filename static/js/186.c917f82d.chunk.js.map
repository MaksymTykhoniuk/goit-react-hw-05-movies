{"version":3,"file":"static/js/186.c917f82d.chunk.js","mappings":"uMAqCA,UAhCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAgBI,EAAKC,QAAzB,GAGrC,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACV,KAGF,+BACGa,EAAAA,EAAAA,SAAQV,IACP,qEAEA,wBACGA,EAAaW,KAAI,SAAAC,GAChB,OACE,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,OAKV,C,+LCjCKC,EAAM,mCAECC,EAAkB,mCAAG,0FACf,mDADe,SAGTC,EAAAA,EAAAA,IAAA,UAFN,mDAEM,oBAAiCF,IAHxB,cAG1BG,EAH0B,yBAKzBA,EAASC,MALgB,2CAAH,qDAQlBC,EAAiB,mCAAG,WAAMN,GAAN,4HAGRG,EAAAA,EAAAA,IAAA,UAHQ,sCAGR,YAAyBH,EAAzB,oBAAuCC,IAH/B,cAGzBG,EAHyB,yBAKxBA,EAASC,MALe,2CAAH,sDAQjBE,EAAiB,mCAAG,WAAMP,GAAN,4HAGRG,EAAAA,EAAAA,IAAA,UAHQ,sCAGR,YAAyBH,EAAzB,4BAA+CC,IAHvC,cAGzBG,EAHyB,yBAKxBA,EAASC,MALe,2CAAH,sDAQjBjB,EAAiB,mCAAG,WAAMY,GAAN,4HAGRG,EAAAA,EAAAA,IAAA,UAHQ,sCAGR,YACNH,EADM,4BACgBC,EADhB,YAHQ,cAGzBG,EAHyB,yBAOxBA,EAASC,MAPe,2CAAH,sDAUjBG,EAAiB,mCAAG,WAAMC,GAAN,kIAGRN,EAAAA,EAAAA,IAAA,UAHQ,4CAGR,oBACEF,EADF,kBACeQ,EADf,YAHQ,cAGzBL,EAHyB,yBAOxBA,EAASC,MAPe,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/API.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieReviews } from 'services/API';\nimport { isEmpty } from 'lodash';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    try {\n      fetchMovieReviews(movieId).then(resp => setMovieReviews(resp.results));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {isEmpty(movieReviews) ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        <ul>\n          {movieReviews.map(review => {\n            return (\n              <li key={review.id}>\n                <b>{review.author}</b>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = '851ffe53da79d37b9e7424b9cd604edc';\n\nexport const fetchTrendingMovie = async () => {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\n\n  const response = await axios.get(`${BASE_URL}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/`;\n\n  const response = await axios.get(`${BASE_URL}/${id}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/`;\n\n  const response = await axios.get(`${BASE_URL}/${id}/credits?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/`;\n\n  const response = await axios.get(\n    `${BASE_URL}/${id}/reviews?api_key=${KEY}&page=1`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n\n  const response = await axios.get(\n    `${BASE_URL}?api_key=${KEY}&query=${query}&page=1`\n  );\n\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","fetchMovieReviews","then","resp","results","error","console","log","isEmpty","map","review","author","content","id","KEY","fetchTrendingMovie","axios","response","data","fetchMovieDetails","fetchMovieCredits","fetchMovieByQuery","query"],"sourceRoot":""}