{"version":3,"file":"static/js/36.8e37de90.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledContainer = styled.div`\n  width: 1260px;\n  padding: 0px 30px;\n  margin: 0 auto;\n  background-color: rgb(255, 250, 250);\n  min-height: 100vh;\n`;\n","import { StyledContainer } from './Container.styled';\nimport PropTypes from 'prop-types';\n\nexport const Container = ({ children }) => {\n  return <StyledContainer>{children}</StyledContainer>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};","import styled from '@emotion/styled';\nimport { HiSearch } from 'react-icons/hi';\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { useState } from 'react';\nimport {\n  Form,\n  SearchFormButton,\n  SearchFormInput,\n  SearchFormButtonLabel,\n} from './SearchBox.styled';\nimport PropTypes from 'prop-types';\nimport { MdImageSearch } from 'react-icons/md';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = event => {\n    const { value } = event.currentTarget;\n\n    setInputValue(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (inputValue.trim() === '') {\n      alert('Search query can not be empty.');\n      return;\n    }\n    onSubmit(inputValue);\n    clearForm();\n  };\n\n  const clearForm = () => {\n    setInputValue('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <SearchFormButton type=\"submit\">\n        <SearchFormButtonLabel>\n          <MdImageSearch size=\"30px\" fill=\"#a01d1d\" />\n        </SearchFormButtonLabel>\n      </SearchFormButton>\n\n      <SearchFormInput\n        onChange={handleInputChange}\n        value={inputValue}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search films in database\"\n      />\n    </Form>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Container } from 'components/Container/Container';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { fetchMovieByQuery } from 'services/API';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('query') ?? '';\n  const location = useLocation();\n\n  const handleFormSubmit = searchQueryForm => {\n    setSearchQuery(searchQueryForm !== '' ? { query: searchQueryForm } : {});\n  };\n\n  useEffect(() => {\n    if (query) {\n      try {\n        fetchMovieByQuery(query).then(resp => {\n          setSearchResults([...resp.results]);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [query]);\n\n  return (\n    <Container>\n      <SearchBox onSubmit={handleFormSubmit}></SearchBox>\n      {searchResults.length === 0 && query !== '' && (\n        <p>The search has not given any results</p>\n      )}\n\n      {searchResults.length > 0 && (\n        <h1>\n          Search results for keyword <em>{query}</em>:\n        </h1>\n      )}\n      <ul>\n        {searchResults.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '851ffe53da79d37b9e7424b9cd604edc';\n\nexport const fetchTrendingMovie = async () => {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\n\n  const response = await axios.get(`${BASE_URL}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/`;\n\n  const response = await axios.get(`${BASE_URL}/${id}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/`;\n\n  const response = await axios.get(`${BASE_URL}/${id}/credits?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/`;\n\n  const response = await axios.get(\n    `${BASE_URL}/${id}/reviews?api_key=${KEY}&page=1`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n\n  const response = await axios.get(\n    `${BASE_URL}?api_key=${KEY}&query=${query}&page=1`\n  );\n\n  return response.data;\n};\n"],"names":["StyledContainer","styled","Container","children","Form","SearchFormButton","SearchFormButtonLabel","SearchFormInput","HiSearch","SearchBox","onSubmit","useState","inputValue","setInputValue","clearForm","event","preventDefault","trim","alert","type","size","fill","onChange","value","currentTarget","autoComplete","autoFocus","placeholder","searchResults","setSearchResults","useSearchParams","searchQuery","setSearchQuery","query","get","location","useLocation","useEffect","fetchMovieByQuery","then","resp","results","error","console","log","searchQueryForm","length","map","movie","to","id","state","from","title","KEY","fetchTrendingMovie","axios","response","data","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}