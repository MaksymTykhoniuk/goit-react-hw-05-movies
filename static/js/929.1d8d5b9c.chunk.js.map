{"version":3,"file":"static/js/929.1d8d5b9c.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledContainer = styled.div`\n  width: 1260px;\n  padding: 0px 30px;\n  margin: 0 auto;\n  background-color: rgb(255, 250, 250);\n  min-height: 100vh;\n`;\n","import { StyledContainer } from './Container.styled';\nimport PropTypes from 'prop-types';\n\nexport const Container = ({ children }) => {\n  return <StyledContainer>{children}</StyledContainer>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  padding: 10px;\n`;\n\nexport const MovieTextWrapper = styled.div`\n  padding: 100px 50px;\n`;\n\nexport const SubMenuList = styled.ul`\n  display: flex;\n`;\n\nexport const SubNavLink = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 600;\n  color: #001a00;\n  &.active {\n    color: #a01d1d;\n  }\n`;\n\nexport const SubMenuItem = styled.li`\n  padding: 10px;\n`;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { isEmpty } from 'lodash';\nimport { Container } from 'components/Container/Container';\nimport {\n  MovieInfoWrapper,\n  MovieTextWrapper,\n  SubMenuItem,\n  SubMenuList,\n  SubNavLink,\n} from './MovieDetails.styled';\nimport { fetchMovieDetails } from 'services/API';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState({});\n  const location = useLocation();\n  const backHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    try {\n      fetchMovieDetails(movieId).then(resp => {\n        setMovieInfo(resp);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  let source = '';\n  if (!movieInfo.poster_path) {\n    source =\n      'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg';\n  } else {\n    source = `https://image.tmdb.org/t/p/w500/${movieInfo.poster_path}`;\n  }\n\n  return (\n    <>\n      <Container>\n        <BackLink to={backHref.current}>go back kek</BackLink>\n        {!isEmpty(movieInfo) && (\n          <>\n            <MovieInfoWrapper>\n              <img src={source} alt={movieInfo.title} width=\"300px\" />\n              <MovieTextWrapper>\n                {' '}\n                <h1>\n                  {movieInfo.title}{' '}\n                  {movieInfo.release_date && (\n                    <span\n                      style={{\n                        padding: '0px 10px',\n                        color: '#a01d1d',\n                      }}\n                    >\n                      {movieInfo.release_date.slice(0, 4)}\n                    </span>\n                  )}\n                </h1>\n                <p>\n                  User score: {Math.round(movieInfo.vote_average * 10) + '%'}\n                </p>\n                <strong>Overwiew</strong>\n                <p>{movieInfo.overview}</p>\n                <strong>Genres</strong>\n                <p>\n                  {movieInfo.genres.length > 0\n                    ? movieInfo.genres.map(genre => genre.name).join(', ')\n                    : 'No information'}\n                </p>\n              </MovieTextWrapper>\n            </MovieInfoWrapper>\n\n            <div>\n              <h2>Additional information</h2>\n              <SubMenuList>\n                <SubMenuItem>\n                  <SubNavLink to=\"cast\">Cast</SubNavLink>\n                </SubMenuItem>\n                <SubMenuItem>\n                  <SubNavLink to=\"reviews\">Reviews</SubNavLink>\n                </SubMenuItem>\n              </SubMenuList>\n\n              <Suspense fallback={<div>Loading subpage...</div>}>\n                <Outlet />\n              </Suspense>\n            </div>\n          </>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = '851ffe53da79d37b9e7424b9cd604edc';\n\nexport const fetchTrendingMovie = async () => {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\n\n  const response = await axios.get(`${BASE_URL}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/`;\n\n  const response = await axios.get(`${BASE_URL}/${id}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/`;\n\n  const response = await axios.get(`${BASE_URL}/${id}/credits?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/`;\n\n  const response = await axios.get(\n    `${BASE_URL}/${id}/reviews?api_key=${KEY}&page=1`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n\n  const response = await axios.get(\n    `${BASE_URL}?api_key=${KEY}&query=${query}&page=1`\n  );\n\n  return response.data;\n};\n"],"names":["StyledContainer","styled","Container","children","StyledLink","Link","BackLink","to","size","MovieInfoWrapper","MovieTextWrapper","SubMenuList","SubNavLink","NavLink","SubMenuItem","movieId","useParams","useState","movieInfo","setMovieInfo","location","useLocation","backHref","useRef","state","from","useEffect","fetchMovieDetails","then","resp","error","console","log","source","poster_path","current","isEmpty","src","alt","title","width","release_date","style","padding","color","slice","Math","round","vote_average","overview","genres","length","map","genre","name","join","Suspense","fallback","KEY","fetchTrendingMovie","axios","response","data","id","fetchMovieCredits","fetchMovieReviews","fetchMovieByQuery","query"],"sourceRoot":""}